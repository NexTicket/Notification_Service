generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Stores a log of every notification sent or attempted
model Notification {
  id               String   @id @default(uuid())
  firebaseUid      String   // The user's Firebase ID from the Kafka message
  recipientEmail   String   // The user's email, fetched from the User service
  status           Status   @default(PENDING) // The current status of the notification
  provider         String   @default("SENDGRID") // The service used to send (e.g., SENDGRID, FIREBASE_PUSH)
  qrCodeUrl        String?  // Public URL of the QR image in Google Cloud Storage
  qrDataString     String   // The original data string for the QR code from Kafka
  notificationData Json?    // A JSON snapshot of all data used in the email (event name, venue, etc.)
  failureReason    String?  // If the status is FAILED, this stores the error
  retryCount       Int      @default(0) // Number of retry attempts
  messageId        String   @unique // Unique message ID from Kafka for idempotency
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@index([firebaseUid])
  @@index([status])
  @@index([messageId])
  @@map("notifications")
}

enum Status {
  PENDING   // Just received, not yet processed
  SENT      // Sent successfully
  FAILED    // A permanent failure occurred
  RETRYING  // A temporary failure, will try again
}
